name: 'C++ CI'

on:
  push:
    branches:
      - lab1
      - feature/github_actions

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    permissions: write-all
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number}}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

  release_assets_ubuntu:
    name: Release assets
    needs: create_release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url}}
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.zip
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.zip
          asset_content_type: application/vnd.debian.binary-package

  release_assets_macos:
    name: Release assets
    needs: create_release
    runs-on: macos-latest
    permissions: write-all 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - run: brew install boost
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url}}
          asset_name: helloworld-0.0.${{ github.run_number }}-Darwin.zip
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Darwin.zip
          asset_content_type: application/zip

  




  